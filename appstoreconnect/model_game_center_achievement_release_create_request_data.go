/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterAchievementReleaseCreateRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterAchievementReleaseCreateRequestData{}

// GameCenterAchievementReleaseCreateRequestData struct for GameCenterAchievementReleaseCreateRequestData
type GameCenterAchievementReleaseCreateRequestData struct {
	Type          string                                                     `json:"type"`
	Relationships GameCenterAchievementReleaseCreateRequestDataRelationships `json:"relationships"`
}

// NewGameCenterAchievementReleaseCreateRequestData instantiates a new GameCenterAchievementReleaseCreateRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterAchievementReleaseCreateRequestData(type_ string, relationships GameCenterAchievementReleaseCreateRequestDataRelationships) *GameCenterAchievementReleaseCreateRequestData {
	this := GameCenterAchievementReleaseCreateRequestData{}
	this.Type = type_
	this.Relationships = relationships
	return &this
}

// NewGameCenterAchievementReleaseCreateRequestDataWithDefaults instantiates a new GameCenterAchievementReleaseCreateRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterAchievementReleaseCreateRequestDataWithDefaults() *GameCenterAchievementReleaseCreateRequestData {
	this := GameCenterAchievementReleaseCreateRequestData{}
	return &this
}

// GetType returns the Type field value
func (o *GameCenterAchievementReleaseCreateRequestData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementReleaseCreateRequestData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GameCenterAchievementReleaseCreateRequestData) SetType(v string) {
	o.Type = v
}

// GetRelationships returns the Relationships field value
func (o *GameCenterAchievementReleaseCreateRequestData) GetRelationships() GameCenterAchievementReleaseCreateRequestDataRelationships {
	if o == nil {
		var ret GameCenterAchievementReleaseCreateRequestDataRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementReleaseCreateRequestData) GetRelationshipsOk() (*GameCenterAchievementReleaseCreateRequestDataRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *GameCenterAchievementReleaseCreateRequestData) SetRelationships(v GameCenterAchievementReleaseCreateRequestDataRelationships) {
	o.Relationships = v
}

func (o GameCenterAchievementReleaseCreateRequestData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterAchievementReleaseCreateRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["relationships"] = o.Relationships
	return toSerialize, nil
}

type NullableGameCenterAchievementReleaseCreateRequestData struct {
	value *GameCenterAchievementReleaseCreateRequestData
	isSet bool
}

func (v NullableGameCenterAchievementReleaseCreateRequestData) Get() *GameCenterAchievementReleaseCreateRequestData {
	return v.value
}

func (v *NullableGameCenterAchievementReleaseCreateRequestData) Set(val *GameCenterAchievementReleaseCreateRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterAchievementReleaseCreateRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterAchievementReleaseCreateRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterAchievementReleaseCreateRequestData(val *GameCenterAchievementReleaseCreateRequestData) *NullableGameCenterAchievementReleaseCreateRequestData {
	return &NullableGameCenterAchievementReleaseCreateRequestData{value: val, isSet: true}
}

func (v NullableGameCenterAchievementReleaseCreateRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterAchievementReleaseCreateRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
