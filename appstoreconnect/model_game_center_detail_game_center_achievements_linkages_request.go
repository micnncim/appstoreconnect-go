/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterDetailGameCenterAchievementsLinkagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterDetailGameCenterAchievementsLinkagesRequest{}

// GameCenterDetailGameCenterAchievementsLinkagesRequest struct for GameCenterDetailGameCenterAchievementsLinkagesRequest
type GameCenterDetailGameCenterAchievementsLinkagesRequest struct {
	Data []GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData `json:"data"`
}

// NewGameCenterDetailGameCenterAchievementsLinkagesRequest instantiates a new GameCenterDetailGameCenterAchievementsLinkagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterDetailGameCenterAchievementsLinkagesRequest(data []GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData) *GameCenterDetailGameCenterAchievementsLinkagesRequest {
	this := GameCenterDetailGameCenterAchievementsLinkagesRequest{}
	this.Data = data
	return &this
}

// NewGameCenterDetailGameCenterAchievementsLinkagesRequestWithDefaults instantiates a new GameCenterDetailGameCenterAchievementsLinkagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterDetailGameCenterAchievementsLinkagesRequestWithDefaults() *GameCenterDetailGameCenterAchievementsLinkagesRequest {
	this := GameCenterDetailGameCenterAchievementsLinkagesRequest{}
	return &this
}

// GetData returns the Data field value
func (o *GameCenterDetailGameCenterAchievementsLinkagesRequest) GetData() []GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData {
	if o == nil {
		var ret []GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GameCenterDetailGameCenterAchievementsLinkagesRequest) GetDataOk() ([]GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GameCenterDetailGameCenterAchievementsLinkagesRequest) SetData(v []GameCenterAchievementLocalizationRelationshipsGameCenterAchievementData) {
	o.Data = v
}

func (o GameCenterDetailGameCenterAchievementsLinkagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterDetailGameCenterAchievementsLinkagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableGameCenterDetailGameCenterAchievementsLinkagesRequest struct {
	value *GameCenterDetailGameCenterAchievementsLinkagesRequest
	isSet bool
}

func (v NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) Get() *GameCenterDetailGameCenterAchievementsLinkagesRequest {
	return v.value
}

func (v *NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) Set(val *GameCenterDetailGameCenterAchievementsLinkagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterDetailGameCenterAchievementsLinkagesRequest(val *GameCenterDetailGameCenterAchievementsLinkagesRequest) *NullableGameCenterDetailGameCenterAchievementsLinkagesRequest {
	return &NullableGameCenterDetailGameCenterAchievementsLinkagesRequest{value: val, isSet: true}
}

func (v NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterDetailGameCenterAchievementsLinkagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
