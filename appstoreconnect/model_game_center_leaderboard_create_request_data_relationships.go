/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterLeaderboardCreateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardCreateRequestDataRelationships{}

// GameCenterLeaderboardCreateRequestDataRelationships struct for GameCenterLeaderboardCreateRequestDataRelationships
type GameCenterLeaderboardCreateRequestDataRelationships struct {
	GameCenterDetail          *GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail          `json:"gameCenterDetail,omitempty"`
	GameCenterGroup           *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup           `json:"gameCenterGroup,omitempty"`
	GameCenterLeaderboardSets *GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets `json:"gameCenterLeaderboardSets,omitempty"`
}

// NewGameCenterLeaderboardCreateRequestDataRelationships instantiates a new GameCenterLeaderboardCreateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardCreateRequestDataRelationships() *GameCenterLeaderboardCreateRequestDataRelationships {
	this := GameCenterLeaderboardCreateRequestDataRelationships{}
	return &this
}

// NewGameCenterLeaderboardCreateRequestDataRelationshipsWithDefaults instantiates a new GameCenterLeaderboardCreateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardCreateRequestDataRelationshipsWithDefaults() *GameCenterLeaderboardCreateRequestDataRelationships {
	this := GameCenterLeaderboardCreateRequestDataRelationships{}
	return &this
}

// GetGameCenterDetail returns the GameCenterDetail field value if set, zero value otherwise.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterDetail() GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail {
	if o == nil || IsNil(o.GameCenterDetail) {
		var ret GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail
		return ret
	}
	return *o.GameCenterDetail
}

// GetGameCenterDetailOk returns a tuple with the GameCenterDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterDetailOk() (*GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail, bool) {
	if o == nil || IsNil(o.GameCenterDetail) {
		return nil, false
	}
	return o.GameCenterDetail, true
}

// HasGameCenterDetail returns a boolean if a field has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) HasGameCenterDetail() bool {
	if o != nil && !IsNil(o.GameCenterDetail) {
		return true
	}

	return false
}

// SetGameCenterDetail gets a reference to the given GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail and assigns it to the GameCenterDetail field.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) SetGameCenterDetail(v GameCenterAchievementCreateRequestDataRelationshipsGameCenterDetail) {
	o.GameCenterDetail = &v
}

// GetGameCenterGroup returns the GameCenterGroup field value if set, zero value otherwise.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterGroup() GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup {
	if o == nil || IsNil(o.GameCenterGroup) {
		var ret GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup
		return ret
	}
	return *o.GameCenterGroup
}

// GetGameCenterGroupOk returns a tuple with the GameCenterGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterGroupOk() (*GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup, bool) {
	if o == nil || IsNil(o.GameCenterGroup) {
		return nil, false
	}
	return o.GameCenterGroup, true
}

// HasGameCenterGroup returns a boolean if a field has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) HasGameCenterGroup() bool {
	if o != nil && !IsNil(o.GameCenterGroup) {
		return true
	}

	return false
}

// SetGameCenterGroup gets a reference to the given GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup and assigns it to the GameCenterGroup field.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) SetGameCenterGroup(v GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) {
	o.GameCenterGroup = &v
}

// GetGameCenterLeaderboardSets returns the GameCenterLeaderboardSets field value if set, zero value otherwise.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterLeaderboardSets() GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets {
	if o == nil || IsNil(o.GameCenterLeaderboardSets) {
		var ret GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets
		return ret
	}
	return *o.GameCenterLeaderboardSets
}

// GetGameCenterLeaderboardSetsOk returns a tuple with the GameCenterLeaderboardSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) GetGameCenterLeaderboardSetsOk() (*GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets, bool) {
	if o == nil || IsNil(o.GameCenterLeaderboardSets) {
		return nil, false
	}
	return o.GameCenterLeaderboardSets, true
}

// HasGameCenterLeaderboardSets returns a boolean if a field has been set.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) HasGameCenterLeaderboardSets() bool {
	if o != nil && !IsNil(o.GameCenterLeaderboardSets) {
		return true
	}

	return false
}

// SetGameCenterLeaderboardSets gets a reference to the given GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets and assigns it to the GameCenterLeaderboardSets field.
func (o *GameCenterLeaderboardCreateRequestDataRelationships) SetGameCenterLeaderboardSets(v GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets) {
	o.GameCenterLeaderboardSets = &v
}

func (o GameCenterLeaderboardCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardCreateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GameCenterDetail) {
		toSerialize["gameCenterDetail"] = o.GameCenterDetail
	}
	if !IsNil(o.GameCenterGroup) {
		toSerialize["gameCenterGroup"] = o.GameCenterGroup
	}
	if !IsNil(o.GameCenterLeaderboardSets) {
		toSerialize["gameCenterLeaderboardSets"] = o.GameCenterLeaderboardSets
	}
	return toSerialize, nil
}

type NullableGameCenterLeaderboardCreateRequestDataRelationships struct {
	value *GameCenterLeaderboardCreateRequestDataRelationships
	isSet bool
}

func (v NullableGameCenterLeaderboardCreateRequestDataRelationships) Get() *GameCenterLeaderboardCreateRequestDataRelationships {
	return v.value
}

func (v *NullableGameCenterLeaderboardCreateRequestDataRelationships) Set(val *GameCenterLeaderboardCreateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardCreateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardCreateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardCreateRequestDataRelationships(val *GameCenterLeaderboardCreateRequestDataRelationships) *NullableGameCenterLeaderboardCreateRequestDataRelationships {
	return &NullableGameCenterLeaderboardCreateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardCreateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
