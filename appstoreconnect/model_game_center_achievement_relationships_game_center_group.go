/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterAchievementRelationshipsGameCenterGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterAchievementRelationshipsGameCenterGroup{}

// GameCenterAchievementRelationshipsGameCenterGroup struct for GameCenterAchievementRelationshipsGameCenterGroup
type GameCenterAchievementRelationshipsGameCenterGroup struct {
	Links *AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks `json:"links,omitempty"`
	Data  *GameCenterAchievementRelationshipsGameCenterGroupData      `json:"data,omitempty"`
}

// NewGameCenterAchievementRelationshipsGameCenterGroup instantiates a new GameCenterAchievementRelationshipsGameCenterGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterAchievementRelationshipsGameCenterGroup() *GameCenterAchievementRelationshipsGameCenterGroup {
	this := GameCenterAchievementRelationshipsGameCenterGroup{}
	return &this
}

// NewGameCenterAchievementRelationshipsGameCenterGroupWithDefaults instantiates a new GameCenterAchievementRelationshipsGameCenterGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterAchievementRelationshipsGameCenterGroupWithDefaults() *GameCenterAchievementRelationshipsGameCenterGroup {
	this := GameCenterAchievementRelationshipsGameCenterGroup{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) GetLinks() AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks {
	if o == nil || IsNil(o.Links) {
		var ret AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) GetLinksOk() (*AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks and assigns it to the Links field.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) SetLinks(v AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) GetData() GameCenterAchievementRelationshipsGameCenterGroupData {
	if o == nil || IsNil(o.Data) {
		var ret GameCenterAchievementRelationshipsGameCenterGroupData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) GetDataOk() (*GameCenterAchievementRelationshipsGameCenterGroupData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GameCenterAchievementRelationshipsGameCenterGroupData and assigns it to the Data field.
func (o *GameCenterAchievementRelationshipsGameCenterGroup) SetData(v GameCenterAchievementRelationshipsGameCenterGroupData) {
	o.Data = &v
}

func (o GameCenterAchievementRelationshipsGameCenterGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterAchievementRelationshipsGameCenterGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGameCenterAchievementRelationshipsGameCenterGroup struct {
	value *GameCenterAchievementRelationshipsGameCenterGroup
	isSet bool
}

func (v NullableGameCenterAchievementRelationshipsGameCenterGroup) Get() *GameCenterAchievementRelationshipsGameCenterGroup {
	return v.value
}

func (v *NullableGameCenterAchievementRelationshipsGameCenterGroup) Set(val *GameCenterAchievementRelationshipsGameCenterGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterAchievementRelationshipsGameCenterGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterAchievementRelationshipsGameCenterGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterAchievementRelationshipsGameCenterGroup(val *GameCenterAchievementRelationshipsGameCenterGroup) *NullableGameCenterAchievementRelationshipsGameCenterGroup {
	return &NullableGameCenterAchievementRelationshipsGameCenterGroup{value: val, isSet: true}
}

func (v NullableGameCenterAchievementRelationshipsGameCenterGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterAchievementRelationshipsGameCenterGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
