/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterLeaderboardSetLocalizationUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardSetLocalizationUpdateRequest{}

// GameCenterLeaderboardSetLocalizationUpdateRequest struct for GameCenterLeaderboardSetLocalizationUpdateRequest
type GameCenterLeaderboardSetLocalizationUpdateRequest struct {
	Data GameCenterLeaderboardSetLocalizationUpdateRequestData `json:"data"`
}

// NewGameCenterLeaderboardSetLocalizationUpdateRequest instantiates a new GameCenterLeaderboardSetLocalizationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardSetLocalizationUpdateRequest(data GameCenterLeaderboardSetLocalizationUpdateRequestData) *GameCenterLeaderboardSetLocalizationUpdateRequest {
	this := GameCenterLeaderboardSetLocalizationUpdateRequest{}
	this.Data = data
	return &this
}

// NewGameCenterLeaderboardSetLocalizationUpdateRequestWithDefaults instantiates a new GameCenterLeaderboardSetLocalizationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardSetLocalizationUpdateRequestWithDefaults() *GameCenterLeaderboardSetLocalizationUpdateRequest {
	this := GameCenterLeaderboardSetLocalizationUpdateRequest{}
	return &this
}

// GetData returns the Data field value
func (o *GameCenterLeaderboardSetLocalizationUpdateRequest) GetData() GameCenterLeaderboardSetLocalizationUpdateRequestData {
	if o == nil {
		var ret GameCenterLeaderboardSetLocalizationUpdateRequestData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetLocalizationUpdateRequest) GetDataOk() (*GameCenterLeaderboardSetLocalizationUpdateRequestData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GameCenterLeaderboardSetLocalizationUpdateRequest) SetData(v GameCenterLeaderboardSetLocalizationUpdateRequestData) {
	o.Data = v
}

func (o GameCenterLeaderboardSetLocalizationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardSetLocalizationUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableGameCenterLeaderboardSetLocalizationUpdateRequest struct {
	value *GameCenterLeaderboardSetLocalizationUpdateRequest
	isSet bool
}

func (v NullableGameCenterLeaderboardSetLocalizationUpdateRequest) Get() *GameCenterLeaderboardSetLocalizationUpdateRequest {
	return v.value
}

func (v *NullableGameCenterLeaderboardSetLocalizationUpdateRequest) Set(val *GameCenterLeaderboardSetLocalizationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardSetLocalizationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardSetLocalizationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardSetLocalizationUpdateRequest(val *GameCenterLeaderboardSetLocalizationUpdateRequest) *NullableGameCenterLeaderboardSetLocalizationUpdateRequest {
	return &NullableGameCenterLeaderboardSetLocalizationUpdateRequest{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardSetLocalizationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardSetLocalizationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
