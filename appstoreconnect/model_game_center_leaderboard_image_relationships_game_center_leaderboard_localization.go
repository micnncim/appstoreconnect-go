/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization{}

// GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization struct for GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization
type GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization struct {
	Links *AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks                   `json:"links,omitempty"`
	Data  *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData `json:"data,omitempty"`
}

// NewGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization instantiates a new GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization() *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization {
	this := GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization{}
	return &this
}

// NewGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationWithDefaults instantiates a new GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationWithDefaults() *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization {
	this := GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) GetLinks() AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks {
	if o == nil || IsNil(o.Links) {
		var ret AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) GetLinksOk() (*AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks and assigns it to the Links field.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) SetLinks(v AppAvailabilityV2RelationshipsTerritoryAvailabilitiesLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) GetData() GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData {
	if o == nil || IsNil(o.Data) {
		var ret GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) GetDataOk() (*GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData and assigns it to the Data field.
func (o *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) SetData(v GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData) {
	o.Data = &v
}

func (o GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization struct {
	value *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization
	isSet bool
}

func (v NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) Get() *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization {
	return v.value
}

func (v *NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) Set(val *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization(val *GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) *NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization {
	return &NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
