/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// checks if the GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup{}

// GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup struct for GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup
type GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup struct {
	Data *GameCenterAchievementRelationshipsGameCenterGroupData `json:"data,omitempty"`
}

// NewGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup instantiates a new GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup() *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup {
	this := GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup{}
	return &this
}

// NewGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroupWithDefaults instantiates a new GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroupWithDefaults() *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup {
	this := GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) GetData() GameCenterAchievementRelationshipsGameCenterGroupData {
	if o == nil || IsNil(o.Data) {
		var ret GameCenterAchievementRelationshipsGameCenterGroupData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) GetDataOk() (*GameCenterAchievementRelationshipsGameCenterGroupData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GameCenterAchievementRelationshipsGameCenterGroupData and assigns it to the Data field.
func (o *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) SetData(v GameCenterAchievementRelationshipsGameCenterGroupData) {
	o.Data = &v
}

func (o GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup struct {
	value *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup
	isSet bool
}

func (v NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) Get() *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup {
	return v.value
}

func (v *NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) Set(val *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup(val *GameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) *NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup {
	return &NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup{value: val, isSet: true}
}

func (v NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterAchievementCreateRequestDataRelationshipsGameCenterGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
